"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[58],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),y=p(r),u=o,m=y["".concat(l,".").concat(u)]||y[u]||d[u]||i;return r?n.createElement(m,s(s({ref:t},c),{},{components:r})):n.createElement(m,s({ref:t},c))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=y;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},7615:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={title:"Browser Only",description:"Browser only support for sentry-testkit",sidebar_position:5},s="Running in Browser Only Mode",a={unversionedId:"browser-only",id:"browser-only",title:"Browser Only",description:"Browser only support for sentry-testkit",source:"@site/docs/browser-only.md",sourceDirName:".",slug:"/browser-only",permalink:"/sentry-testkit/docs/browser-only",draft:!1,editUrl:"https://github.com/zivl/sentry-testkit/blob/master/website/docs/docs/browser-only.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Browser Only",description:"Browser only support for sentry-testkit",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"External Process",permalink:"/sentry-testkit/docs/external-process"},next:{title:"Version 3 Migration Guide",permalink:"/sentry-testkit/docs/migration/version-3"}},l={},p=[{value:"Node.js Dependencies",id:"nodejs-dependencies",level:2},{value:"Separated Browser-Only Entry Point",id:"separated-browser-only-entry-point",level:2},{value:"Usage",id:"usage",level:3}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-in-browser-only-mode"},"Running in Browser Only Mode"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Sentry-testkit")," is a JavaScript library commonly used with the Sentry error monitoring and reporting platform. It offers the ability to simulate and test Sentry error reporting. A noteworthy aspect of ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit")," is its compatibility with different JavaScript environments, including both Node.js and web browsers. This compatibility is achieved through the following mechanisms:"),(0,o.kt)("h2",{id:"nodejs-dependencies"},"Node.js Dependencies"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Sentry-testkit")," relies on two Node.js packages, namely ",(0,o.kt)("inlineCode",{parentName:"p"},"express")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"http"),". These packages are typically used in Node.js applications for tasks such as handling HTTP requests and creating web servers. This dependency implies that ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit")," was originally designed with Node.js environments in mind, where server-side JavaScript operations are common."),(0,o.kt)("h2",{id:"separated-browser-only-entry-point"},"Separated Browser-Only Entry Point"),(0,o.kt)("p",null,"To make ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit")," suitable for use in web browsers (client-side JavaScript), a separate entry point called ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit/browser")," has been introduced. This browser-specific entry point is configured to exclude any code that depends on Node.js-specific features or APIs."),(0,o.kt)("p",null,"This separation ensures that when using ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit")," in a browser context, you won't encounter issues related to Node.js-specific code that wouldn't work in browsers. Instead, you can rely on the ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit/browser")," version to provide compatibility with browser-based JavaScript applications."),(0,o.kt)("p",null,"In summary, ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit")," offers versatility by supporting both Node.js and browser environments. The introduction of ",(0,o.kt)("inlineCode",{parentName:"p"},"sentry-testkit/browser")," allows developers to seamlessly use this library for testing Sentry error reporting in a variety of JavaScript environments."),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import sentryTestkit from 'sentry-testkit/browser';\n\nconst { sentryTransport, testkit } = sentryTestkit();\n\n// initialize your Sentry instance with sentryTransport\n\n// ...the rest of the testkit usage is the same as in the Node.js example\n\n")))}d.isMDXComponent=!0}}]);